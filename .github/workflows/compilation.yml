name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install texinfo bison flex findutils ninja-build clang
    
    - name: Install Mac dependencies
      if: matrix.os == 'macOS-latest'
      run: |
        brew update
        brew install texinfo bison flex 
        brew install ninja || true

    - name: Runs all the stages in the shell
      run: |
        export ORBISDEV=$PWD/orbisdev
        export PATH=$ORBISDEV/bin:$PATH
        ./build-all.sh

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
    
    - name: Compress orbisdev folder
      run: |
        tar -zcvf orbisdev.tar.gz orbisdev
    
    - uses: actions/upload-artifact@v2
      with:
        name: orbisdev-${{ steps.slug.outputs.sha8 }}-${{matrix.os}}
        path: orbisdev.tar.gz
    
    - name: Rename orbisdev.tar.gz file
      run: |
        mv orbisdev.tar.gz orbisdev-${{matrix.os}}.tar.gz

    - name: Extract tag name
      if: startsWith(github.ref, 'refs/tags/')
      id: tag
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Create pre-release
      if: github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: orbisdev-${{matrix.os}}.tar.gz
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: orbisdev-${{matrix.os}}.tar.gz
        tag_name: ${{ steps.tag.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
